{"version":3,"sources":["assets/generic-pie.jpeg","assets/pecan.jpeg","assets/apple.jpeg","assets/cherry.jpg","assets/blueberry.jpeg","components/PieCard.js","components/Nav.js","components/PieForm.js","components/Store.js","actions/Actions.js","components/App.js","serviceWorker.js","index.js","reducers/Reducers.js"],"names":["module","exports","PieCard","props","Fragment","Card","style","backgroundColor","borderRadius","padding","maxWidth","maxHeight","minHeight","body","CardTitle","name","CardImg","margin","border","cursor","top","width","src","img","alt","hide","longDescription","Button","id","onClick","onPurchase","color","count","NavBar","Navbar","height","paddingBottom","paddingTop","paddingLeft","paddingRight","borderBottom","borderColor","light","expand","NavbarBrand","marginLeft","marginRight","fontSize","fontWeight","href","onForm","outline","PieForm","$","idd","document","getElementById","formStyles","CardText","placeholder","type","quantity","parseInt","value","isNaN","alert","addPie","Store","handlePurchase","selectedPie","pieList","filter","pie","buyPie","displayDetails","pieDetail","selectedCard","pieDetails","addPieToList","pieName","description","v4","newPie","require","pieForm","Nav","this","display","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","fontFamily","dynamicForm","Object","values","map","key","showDetails","details","Component","connect","state","initialPieList","data","flag","App","Boolean","window","location","hostname","match","initialState","store","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c2a38c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/generic-pie.4af163d0.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pecan.246de394.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/apple.a90f47db.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cherry.710348b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blueberry.dda13015.jpeg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardImg, Button } from 'reactstrap';\n\nfunction PieCard(props) {\n\tconst cardStyles = {\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderRadius: '1.5em',\n\t\tpadding: '1.5em',\n\t\tmaxWidth: '20em',\n\t\tmaxHeight: '30em',\n\t\tminHeight: '22em'\n\t};\n\n\tconst imgStyles = {\n\t\tmaxHeight: '16vh',\n\t\tmaxWidth: '27vw',\n\t\tmargin: '.25em',\n\t\tborder: 'solid 1px black',\n\t\tcursor: 'pointer'\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Card style={cardStyles} body>\n\t\t\t\t<h3>\n\t\t\t\t\t<CardTitle>{props.name}</CardTitle>\n\t\t\t\t</h3>\n\t\t\t\t<center>\n\t\t\t\t\t<CardImg\n\t\t\t\t\t\tstyle={imgStyles}\n\t\t\t\t\t\ttop\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\tsrc={props.img}\n\t\t\t\t\t\talt=\"Card image cap\"\n\t\t\t\t\t/>\n\t\t\t\t</center>\n\t\t\t\t<div>{props.hide ? <p>{props.longDescription}</p> : null}</div>\n\t\t\t\t<hr />\n\t\t\t\t<Button\n\t\t\t\t\tid={props.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onPurchase(props.id);\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"success\"\n\t\t\t\t>\n\t\t\t\t\tPurchase {props.name} <br />Quantity Left: <b>{props.count}</b>\n\t\t\t\t</Button>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n}\n\nPieCard.propTypes = {\n\timg: PropTypes.string,\n\tcount: PropTypes.number,\n\tonPurchase: PropTypes.func,\n\tshowDetails: PropTypes.func,\n\tdescription: PropTypes.string\n};\n\nexport default PieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Navbar, NavbarBrand, Button } from 'reactstrap';\n\nconst NavBar = (props) => {\n\tconst navStyles = {\n\t\tbackgroundColor: '#2f2fa2',\n\t\theight: '7vh',\n\t\tpaddingBottom: '5em',\n\t\tpaddingTop: '2.5em',\n\t\tpaddingLeft: '10em',\n\t\tpaddingRight: '10em',\n\t\tborderBottom: '3px solid',\n\t\tborderColor: '#F64C72'\n\t};\n\tconst textStyles = {\n\t\tmarginLeft: '10vw',\n\t\tmarginRight: '2vw',\n\t\tcolor: 'white',\n\t\tbackgroundColor: '#2f2fa2',\n\t\tfontSize: '1.5em',\n\t\tfontWeight: 'bold'\n\t};\n\tconst highlightStyles = {\n\t\tcolor: '#F64C72',\n\t\tborderColor: '#F64C72',\n\t\tfontWeight: 'bold',\n\t\tfontSize: '1em'\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Navbar style={navStyles} light expand=\"md\">\n\t\t\t\t<NavbarBrand style={textStyles} href=\"/\">\n\t\t\t\t\t<h2>Palatable Pie Pantry</h2>\n\t\t\t\t</NavbarBrand>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onForm();\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={highlightStyles}\n\t\t\t\t\toutline\n\t\t\t\t>\n\t\t\t\t\tSubmit Pie Order Form\n\t\t\t\t</Button>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n};\n\nNavBar.propTypes = {\n\tonForm: PropTypes.func\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardText, Button } from 'reactstrap';\nfunction PieForm(props) {\n\tconst $ = (idd) => document.getElementById(idd);\n\n\tconst cardStyles = {\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderRadius: '1.5em',\n\t\tpadding: '1.5em',\n\t\tmaxWidth: '20em',\n\t\tmaxHeight: '30em',\n\t\tminHeight: '22em',\n\t\tpaddingTop: '5em'\n\t};\n\n\tconst formStyles = {\n\t\tborder: 'none',\n\t\tfontSize: '1.5em'\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Card style={cardStyles} body>\n\t\t\t\t<CardText>\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={formStyles}\n\t\t\t\t\t\tplaceholder=\"Name of Pie\"\n\t\t\t\t\t\tid=\"pie-name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={formStyles}\n\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input\n\t\t\t\t\t\tstyle={formStyles}\n\t\t\t\t\t\tplaceholder=\"Quantity\"\n\t\t\t\t\t\tid=\"pie-quantity\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t</CardText>\n\t\t\t\t<hr />\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst quantity = parseInt($('pie-quantity').value);\n\t\t\t\t\t\tif (!isNaN(quantity)) {\n\t\t\t\t\t\t\tprops.addPie(\n\t\t\t\t\t\t\t\t$('pie-name').value,\n\t\t\t\t\t\t\t\t$('description').value,\n\t\t\t\t\t\t\t\tparseInt($('pie-quantity').value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert('Please input a number.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"success\"\n\t\t\t\t>\n\t\t\t\t\tSubmit Order <br />\n\t\t\t\t</Button>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n}\n\nPieForm.propTypes = {\n\timg: PropTypes.string,\n\tcount: PropTypes.number,\n\taddPie: PropTypes.func\n};\n\nexport default PieForm;\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport PieCard from './PieCard';\nimport NavBar from './Nav';\nimport PieForm from './PieForm';\nimport { connect } from 'react-redux';\nimport { addPie, buyPie, pieForm } from './../actions/Actions';\n\nexport default class Store extends Component {\n\thandlePurchase = (id) => {\n\t\tconst selectedPie = this.props.pieList.filter((pie) => pie.id === id)[0];\n\t\tlet count = selectedPie.count - 1;\n\t\tif (count < 1) {\n\t\t\tcount = 0;\n\t\t}\n\t\tthis.props.buyPie(\n\t\t\tselectedPie.name,\n\t\t\tselectedPie.longDescription,\n\t\t\tselectedPie.img,\n\t\t\tcount,\n\t\t\tselectedPie.displayDetails,\n\t\t\tid\n\t\t);\n\t};\n\n\tpieDetail = (id) => {\n\t\tconst selectedCard = this.props.pieList.filter((pie) => pie.id === id)[0];\n\t\tlet displayDetails = null;\n\t\tthis.props.pieDetails(\n\t\t\tselectedCard.name,\n\t\t\tselectedCard.longDescription,\n\t\t\tselectedCard.img,\n\t\t\tselectedCard.count,\n\t\t\tdisplayDetails,\n\t\t\tid\n\t\t);\n\t};\n\n\taddPieToList = (pieName, description, quantity) => {\n\t\tconst id = v4();\n\t\tlet newPie = {\n\t\t\tname: pieName,\n\t\t\tlongDescription: description,\n\t\t\timg: require('./../assets/generic-pie.jpeg'),\n\t\t\tcount: quantity,\n\t\t\tid: id,\n\t\t\tdisplayDetails: false\n\t\t};\n\t\t// reset pie form when new pie is submitted\n\t\tthis.props.pieForm(false);\n\t\tthis.props.addPie(newPie);\n\t};\n\n\tpieForm = () => {\n\t\t// handles showing the order form when nav button is clicked.\n\t\tthis.props.pieForm(true);\n\t};\n\n\trender() {\n\t\tconst gridContainer = {\n\t\t\tdisplay: 'grid',\n\t\t\tgridTemplateColumns: 'repeat(auto-fill, minmax(20em, 3fr))',\n\t\t\tgridTemplateRows: 'repeat(2, .5fr)',\n\t\t\tgridColumnGap: '.5em',\n\t\t\tgridRowGap: '1em',\n\t\t\theight: '100vh',\n\t\t\tbackgroundColor: '#2f2fa2',\n\t\t\tfontFamily: \"'Baloo Bhaina 2' cursive\",\n\t\t\tpadding: '2em',\n\t\t\tmargin: '5em'\n\t\t};\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<NavBar onForm={this.pieForm} />\n\t\t\t\t<div style={gridContainer}>\n\t\t\t\t\t{this.props.dynamicForm ? (\n\t\t\t\t\t\t<PieForm addPie={this.addPieToList} />\n\t\t\t\t\t) : null}\n\t\t\t\t\t{Object.values(this.props.pieList).map((pie) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PieCard\n\t\t\t\t\t\t\t\tname={pie.name}\n\t\t\t\t\t\t\t\timg={pie.img}\n\t\t\t\t\t\t\t\tcount={pie.count}\n\t\t\t\t\t\t\t\tkey={pie.id}\n\t\t\t\t\t\t\t\tid={pie.id}\n\t\t\t\t\t\t\t\tonPurchase={this.handlePurchase}\n\t\t\t\t\t\t\t\tshowDetails={this.pieDetail}\n\t\t\t\t\t\t\t\thide={this.props.details}\n\t\t\t\t\t\t\t\tlongDescription={pie.longDescription}\n\t\t\t\t\t\t\t\tstyle={this.props.details}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nStore.propTypes = {\n\tpieList: PropTypes.array\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpieList: state.initialPieList,\n\t\tdynamicForm: state.dynamicForm,\n\t\tdetails: state.initialPieList\n\t};\n};\n\nStore = connect(mapStateToProps, { addPie, buyPie, pieForm })(Store);\n","export const ADD_PIE = 'ADD_PIE';\nexport const BUY_PIE = 'BUY_PIE';\nexport const PIE_FORM = 'PIE_FORM';\nexport const SHOW_DETAILS = 'SHOW_DETAILS';\n\nexport const addPie = (pie) => {\n\tconst { name, longDescription, img, count, displayDetails, id } = pie;\n\treturn {\n\t\ttype: ADD_PIE,\n\t\tdata: {\n\t\t\tname,\n\t\t\tlongDescription,\n\t\t\timg,\n\t\t\tcount,\n\t\t\tdisplayDetails,\n\t\t\tid\n\t\t}\n\t};\n};\n\nexport const buyPie = (\n\tname,\n\tlongDescription,\n\timg,\n\tcount,\n\tdisplayDetails,\n\tid\n) => {\n\treturn {\n\t\ttype: BUY_PIE,\n\t\tdata: {\n\t\t\tname,\n\t\t\tlongDescription,\n\t\t\timg,\n\t\t\tcount,\n\t\t\tdisplayDetails,\n\t\t\tid\n\t\t}\n\t};\n};\n\nexport const pieForm = (flag) => {\n\treturn {\n\t\ttype: PIE_FORM,\n\t\tdata: flag\n\t};\n};\n\nexport const pieDetails = (\n\tname,\n\tlongDescription,\n\timg,\n\tcount,\n\tdisplayDetails,\n\tid\n) => {\n\treturn {\n\t\ttype: SHOW_DETAILS,\n\t\tdata: {\n\t\t\tname,\n\t\t\tlongDescription,\n\t\t\timg,\n\t\t\tcount,\n\t\t\tdisplayDetails,\n\t\t\tid\n\t\t}\n\t};\n};\n","import React from 'react';\nimport Store from './Store';\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Store />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/Reducers';\nimport { v4 } from 'uuid';\n\nconst initialState = {\n\tinitialPieList: [\n\t\t{\n\t\t\tname: 'Pecan Pie',\n\t\t\tlongDescription:\n\t\t\t\t'Pecan pie is a pie of pecan nuts mixed with a filling of eggs, butter, and sugar. ',\n\t\t\timg: require('./assets/pecan.jpeg'),\n\t\t\tcount: 8,\n\t\t\tdisplayDetails: { display: 'none' },\n\t\t\tid: v4()\n\t\t},\n\t\t{\n\t\t\tname: 'Apple Pie',\n\t\t\tlongDescription:\n\t\t\t\t'Apple pie is an unofficial symbol of the United States and one of its signature comfort foods.',\n\t\t\timg: require('./assets/apple.jpeg'),\n\t\t\tcount: 5,\n\t\t\tdisplayDetails: false,\n\t\t\tid: v4()\n\t\t},\n\t\t{\n\t\t\tname: 'Cherry Pie',\n\t\t\tlongDescription:\n\t\t\t\t'Pie baked with a cherry filling. Traditionally, cherry pie is made with tart rather than sweet cherries. ',\n\t\t\timg: require('./assets/cherry.jpg'),\n\t\t\tcount: 4,\n\t\t\tdisplayDetails: false,\n\t\t\tid: v4()\n\t\t},\n\t\t{\n\t\t\tname: 'Blueberry Pie',\n\t\t\tlongDescription:\n\t\t\t\t'Pecan pie is a pie of pecan nuts mixed with a filling of eggs, butter, and sugar. ',\n\t\t\timg: require('./assets/blueberry.jpeg'),\n\t\t\tcount: 2,\n\t\t\tdisplayDetails: false,\n\t\t\tid: v4()\n\t\t}\n\t],\n\tdynamicForm: null,\n\tstyle: { display: 'none' }\n};\n\n// initialState.initialPieList.forEach((pie) => {\n// \tpie.id = v4();\n// });\n\nconst store = createStore(\n\treducer,\n\tinitialState,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// store.subscribe(() => console.log(store.getState()));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ADD_PIE, BUY_PIE, PIE_FORM } from './../actions/Actions';\n\nexport default (state, action) => {\n\tconst { type, data } = action;\n\tlet pieList;\n\tswitch (type) {\n\t\tcase ADD_PIE:\n\t\t\tpieList = state.initialPieList;\n\t\t\t// returns an array of objects. puts the new pie (DATA) at the front of the array.\n\t\t\treturn { ...state, initialPieList: [ data, ...state.initialPieList ] };\n\t\tcase BUY_PIE:\n\t\t\t// working***\n\t\t\tpieList = state.initialPieList;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialPieList: pieList.map(\n\t\t\t\t\t(pie) => (pie.id === data.id ? { ...data } : pie)\n\t\t\t\t)\n\t\t\t};\n\t\tcase PIE_FORM:\n\t\t\treturn { ...state, dynamicForm: data };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"],"sourceRoot":""}